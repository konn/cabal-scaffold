name: Haskell
on:
  push: 
    branches: [main]
    tags: ['v*']
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        ghc: [9.4.8]
        os: [macOS, ubuntu]
    name: Build (${{matrix.os}})
    env:
      artifact-name: cabal-scaffold.zst
    runs-on: ${{matrix.os}}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{matrix.ghc}}
        cabal-version: 3.12.1.0
    - name: Cache Key Calculation
      id: cache-key
      shell: bash
      run: |
        OS=${{runner.os}}
        CABAL_HASH=${{ hashFiles('**/*.cabal', 'cabal.project', 'cabal.project.freeze') }}
        GHC=${{matrix.ghc}}
        echo "cache-key=build-cabal-store-${OS}-${GHC}-${CABAL_HASH}" >> ${GITHUB_OUTPUT}
        echo "cabal-hash=${CABAL_HASH}" >> ${GITHUB_OUTPUT}
        {
          echo "cache-restore-keys<<STOP"
          echo "build-cabal-store-${OS}-${GHC}-"
          echo "STOP"
        } >> ${GITHUB_OUTPUT}
    - name: Cache ~/.cabal/store
      uses: actions/cache/restore@v3
      with:
        path: ~/.cabal/store
        key: ${{ steps.cache-key.outputs.cache-key }}
        restore-keys: ${{steps.cache-key.outputs.cache-restore-keys}}
    - name: Cache dist-newstyle
      uses: actions/cache@v3
      with:
        path: dist-newstyle
        key: build-dist-${{runner.os}}-${{matrix.ghc}}-${{ steps.cache-key.outputs.cabal-hash }}-${{ hashFiles('**/*.hs') }}
        restore-keys: |
          build-dist-${{runner.os}}-${{matrix.ghc}}-${{ steps.cache-key.outputs.cabal-hash }}-
          build-dist-${{runner.os}}-${{matrix.ghc}}-
    - name: Cabal configure & update
      run: |
        cabal v2-configure --enable-tests --enable-benchmarks --enable-optimization --semaphore
        cabal v2-update
    - name: Build Deps
      run: cabal v2-build --only-dependencies
    - name: Stores ~/.cabal/store cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cabal/store
        key: ${{ steps.cache-key.outputs.cache-key }}
    - name: Cabal build
      run: cabal v2-build
    - name: Collect artifact
      run: |
        DEST=$(cabal list-bin cabal-scaffold)
        zstdmt -8 "${DEST}" -o ${{env.artifact-name}}
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: cabal-scaffold-${{runner.os}}
        path: ${{env.artifact-name}}

  release:
    name: Make Release
    needs: build
    runs-on: ubuntu-latest
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
    # - name: Setups env vars
    #   run: |
    #     RELEASE=$(echo ${{github.ref_name}} | sed 's/^v//')
    #     echo "RELEASE=${RELEASE}" >> "${GITHUB_ENV}"
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Download artifacts
      id: download
      uses: actions/download-artifact@v4
    - name: Unzstd artifacts
      run: |
        pushd cabal-scaffold-Linux
        zstdmt -d cabal-scaffold.zst
        popd

        pushd cabal-scaffold-macOS
        zstdmt -d cabal-scaffold.zst
        popd
    - run: ls -R
    - name: Check Version
      run: |
        ./scripts/check-version.sh "${RELEASE}" "."
    # - name: Make Release on GitHub
    #   env:
    #     GH_TOKEN: ${{ github.token }}
    #   run: |
    #     ./scripts/make-release.sh "${RELEASE}" "."
